.container-fluid
  .row.heightFull
    = render 'shared/sidebar'

    main.col-7
      .contentWrap
        .position-sticky.profile-sticky
          .d-flex.align-items-center
           = link_to posts_path, class: 'nav-link link-light' do
            i.bi.bi-arrow-left-short.me-4
           h5.fw-bold
             | Post
        .tab-content.postDetail
          .d-flex.justify-content-between
            .d-flex.align-items-start.userProfile
              .userProfileImg.me-2
                - if @post.user.avatar_image.attached?
                  = image_tag @post.user.avatar_image, class: "rounded-circle", width: 40, height: 40, alt: 'Profile picture'
                - else
                  = image_tag 'default.webp', class: "rounded-circle", width: 40, height: 40, alt: 'Default profile picture'
              .flex-grow-1
                h5.card-title.mb-0.fw-bold
                  - if @post.user.name.present?
                    = @post.user.name
                  - else 
                    = @post.user.user_name
                small.text-muted
                  | @
                  = @post.user.user_name
            - if current_user != @post.user
              .dropdown.mx-3
                a[href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false"]
                  i.bi.bi-three-dots
                ul.dropdown-menu[aria-labelledby="dropdownMenuLink"]
                  - if current_user.following?(@post.user)
                    li
                      = link_to user_follow_path(@post.user), data: { "turbo-method": :delete }, class: "dropdown-item destroy"
                        i.bi-person-dash.me-2
                        = "@#{@post.user.user_name}さんのフォローを解除"
                  - elsif current_user != @post.user
                    li
                      = link_to user_follows_path(@post.user), data: { "turbo-method": :post }, class: "dropdown-item"
                        i.bi-person-add.me-2
                        = "@#{@post.user.user_name}さんをフォロー"
                
          p.card-text.mt-2
            - if @post.content?
            span
              = safe_join(@post.content.split("\n"), tag(:br))
            - if @post.images.attached?
              .d-flex.flex-wrap.postContentImg
                - @post.images.each do |image|
                  = image_tag image, multiple: true, class: "img-fluid"
          .postCreateDate
           = l @post.created_at, format: :post
          = render 'post_state', :user => @user, :comment => @comment, :post => @post
        div.bg-black.tab-content.commentForm
          = render 'comments/form', :user => @user, :comment => @comment, :post => @post
          - @comments.each do |comment|
            = render comment
    = render 'shared/searchbar'